import{_ as o,o as e,c as n,a}from"./app-l3vwsEqn.js";const t={},s=a('<h1 id="页面内容" tabindex="-1"><a class="header-anchor" href="#页面内容"><span>页面内容</span></a></h1><h2 id="一、问题" tabindex="-1"><a class="header-anchor" href="#一、问题"><span>一、问题</span></a></h2><blockquote><p>当你成为一个技术团队的管理者时，就会经常会被老板问到，研发的价值在哪里？ 如何让研发的价值更大？现在的研发团队和行业内相比效率/能力/水平怎么样？如此种种……</p></blockquote><p>每个公司每个技术团队的管理者都有自己的逻辑来回答这个问题，因为这是带团队的核心逻辑之一，且各有说法。 这里不是想准确的回答这个问题，也不是标准答案，只是对这些问题一些个人思考。</p><h2 id="二、思考" tabindex="-1"><a class="header-anchor" href="#二、思考"><span>二、思考</span></a></h2><blockquote><p><strong>先抛两个公式： 公式一：研发的价值 = (业务价值 + 技术价值) - 非正常成本 - 正常成本 公式二：研发的价值 = 单位有效时间内产出的价值 × 有效时间 - 非正常成本 - 正常成本</strong></p></blockquote><p>这是简化的研发的价值模型,可以作为理解研发价值创造的基础框架。实际应用中可能还需要进一步的细化和调整，因为价值的计算可能远比这两个公式复杂。</p><p>总体来看，让价值更大在于研发成本的开源节流，开源就是提高产出价值，节流就是减少成本。在开源方面来说，提高研发产出价值包括业务价值和技术价值的提升。我们都知道<strong>业务需求是做不完的</strong>，那如何在做不完的业务需求里面产出更大的价值，就值得我们管理者思考了</p><blockquote><p><strong>关键点 在于业务本身的价值和业务价值生效的时间，将具有更大价值的业务需求更快的上线是提高研发测业务价值的主体逻辑。</strong></p></blockquote><p>当然，需求上线后可能还有 bug 之类的，这个我们作为守的那部分来聊。</p><h3 id="_2-1-提高业务价值" tabindex="-1"><a class="header-anchor" href="#_2-1-提高业务价值"><span><strong>2.1 提高业务价值</strong></span></a></h3><blockquote><p>提高业务价值的主体逻辑包括两层意思： 一个是<strong>更大价值的业务</strong>需求，另一个是<strong>更快的上线</strong>。</p></blockquote><h4 id="更大的业务价值" tabindex="-1"><a class="header-anchor" href="#更大的业务价值"><span>更大的业务价值</span></a></h4><p>更大价值的业务需求我理解为做重要的事情，实际上是我们对于事项的一个优先级排序。对于重要的事情分两个阶段，一个是确定事项前的判断，一个是事项确定后的判断，确定前的判断有以下要点：</p><blockquote><p><strong>战略和期望：</strong> 这是在做决策中的非常重要的判断项，公司层面的战略、技术长期规划，老板对这个组织的期望等等 <strong>业务影响和目标价值：</strong> 看这些事项对业务目标的达成情况的影响，对收入增长 的影响，对于客户满意度[NPS]的影响等等 <strong>第三方约束和风险：</strong> 比如合同的时间要求的，技术风险或者稳定性的问题等</p></blockquote><p>基于以上要点管理者对事情的基本判断，还需要做的重要性的判断，因为资源永远是有限的。 在我们确定一个事项是否值得做，我们需要全面的从人力、时间、财力各方面投入来考虑。 依据这个投入同业务价值得出我们产出比，得出个人和团队的精力如何分配等。 资源需求较大的事项即为重要性较高事项，也可以依据资源限制做相应的需要降级调整。</p><p>在明确了事项的优先级后，下一步就是更快的上线了。</p><h4 id="更快的上线" tabindex="-1"><a class="header-anchor" href="#更快的上线"><span>更快的上线</span></a></h4><blockquote><p>更快的上线从研发管理的角度可以分为三个层面，<strong>研发流程、工程系统、团队协作和沟通</strong>。</p></blockquote><ul><li><h6 id="研发流程" tabindex="-1"><a class="header-anchor" href="#研发流程"><span>研发流程</span></a></h6><blockquote><p><strong>精简流程：</strong> 优化研发上线的流程，减少不必要的步骤，以加快从需求到部署的时间； <strong>敏捷迭代：</strong> 采用敏捷小批量、快速迭代的方式推进项目。在实际落地过程中可以以需求吞吐量、平均需求交付周期、每需求人力成本做指标评估。</p></blockquote></li><li><h6 id="工程系统" tabindex="-1"><a class="header-anchor" href="#工程系统"><span>工程系统</span></a></h6><blockquote><p><strong>系统工程化建设：</strong> 体系化运维、系统集成、自动化测试等以提高研发及运维效率 <strong>技术架构优化：</strong> 模块化组件式产品架构设计、对技术架构持续升级优化，确保对业务增长及变化系统能持续支持及降低运维成本。</p></blockquote></li><li><h6 id="团队协作和沟通" tabindex="-1"><a class="header-anchor" href="#团队协作和沟通"><span>团队协作和沟通</span></a></h6><blockquote><p><strong>跨部门协作：</strong> 促进业务、产品、开发、测试、运维和其他相关部门之间的沟通，确保需求的快速流转和问题的及时解决。 <strong>沟通机制：</strong> 建立高效的沟通机制，包括定期会议、即时通讯工具和项目管理软件，确保信息流通畅通。 <strong>团队授权：</strong> 赋予团队更大的决策权，使得团队能够快速作出决策，而不必每一项都上报等待批准。</p></blockquote></li></ul><p>以上是业务价值，将具有更大价值的业务需求更快的上线是核心逻辑。</p><h3 id="_2-2-提高技术价值" tabindex="-1"><a class="header-anchor" href="#_2-2-提高技术价值"><span><strong>2.2 提高技术价值</strong></span></a></h3><p>对于技术价值而言，逻辑略有不同，技术价值在将更大价值的技术更快的上线的基础上， 需要坚定不移的<strong>持续投入和有规划的稳步建设</strong></p><blockquote><p><strong>持续投入：</strong> 是指在资源方面，特别是人力资源方面，需要在业务需求紧张的情况下保障技术需求的投入资源占比。 <strong>有规划的稳定建设：</strong> 是指在<strong>保障系统稳定</strong>的前提下，<strong>有规划</strong>的对技术架构进行优化，明确<strong>技术发展路线图</strong>，按照既定的规划逐步实施技术改造和优化，确保每一步都有明确的目标和时间表。</p></blockquote><h3 id="_2-3-提高有效时间内的价值" tabindex="-1"><a class="header-anchor" href="#_2-3-提高有效时间内的价值"><span><strong>2.3 提高有效时间内的价值</strong></span></a></h3><p>从公式二： <strong>单位有效时间内产出的价值 × 有效时间</strong> 来看，要提高研发价值，需要提高单位有效时间内产出的价值以及提升有效时间。那么如何提高单位有效时间内产出的价值？</p><blockquote><p>一个是从<strong>业务层面</strong>，将具有更大价值的业务需求更快的上线，用熟悉精通业务的人做事自然就更快速。 另一个从<strong>人的层面</strong>，提高单兵能力，因为研发最终是要落在人身上，强化单兵能力，对于提升整个团队的有效时间内的产出有极大地促进作用，单兵能力的高低能决定团队总体效能的高低。</p></blockquote><p>至于提升有效时间，如何提升研发有小时间，从研发管理角度来看</p><blockquote><p>一个是以<strong>机制形式保障</strong>研发的开发投入时间，如研发静默时间，在静默时间不允许插入非写代码相关的事项； 另一方面是以<strong>目标结果导向</strong>，推动团队集中精力专注于某个目标的达成，如小黑屋之类的，当然，其本质上是延长工作时间，也就在一定程度上提升了有效时间，此法慎用，除非文化本来如此，能留下来的是能接受这种文化的人</p></blockquote><p>以上都从开源视角出发，让研发本身产品跟多的价值来思考，自然也可以从节流方向出发，达成降低成本的目的来达成价值提升，这里主要就是减少非正常成本了。</p><h3 id="_2-4-减少非正常成本" tabindex="-1"><a class="header-anchor" href="#_2-4-减少非正常成本"><span><strong>2.4 减少非正常成本</strong></span></a></h3><p>非正常成本是指在生产和运营过程中由于<strong>管理不善、技术失败、人为疏忽或外部因素</strong>导致的超出正常开支的成本。 这些成本通常不是生产或提供服务的必需开支，而是由于各种非计划事件造成的损失，可以以某种方式减少或规避。</p><p>这里的非正常成本IT研发上来梳理包括以下的部分：</p><h4 id="项目延期或需求变更" tabindex="-1"><a class="header-anchor" href="#项目延期或需求变更"><span>项目延期或需求变更</span></a></h4><p>项目延期和需求变更会导致增加额外的人力成本，延迟了需求的上线时间，可能导致业务损失或风险发生。我们一般可以通过更精细的项目管理来减少延期，通过正式的变更控制流程，评估变更的必要性和影响，以控制变更带来的成本。</p><h4 id="产品缺陷" tabindex="-1"><a class="header-anchor" href="#产品缺陷"><span>产品缺陷</span></a></h4><p>产品缺陷我们通常称之为线上 BUG，</p><blockquote><p>当一个线上 BUG 出现后就会有一个流程串起一批人来解决，这个成本比在更前置的开发阶段或测试阶段发现并解决的成本更高，甚至会影响到用户的使用和口碑。</p></blockquote><p>我们一般是通过代码审核、自动化测试等各种流程和机制来保障和提升产品的质量，同时对于已经出现的问题，使用缺陷管理系统，确保所有缺陷被记录、跟踪并及时处理。</p><h4 id="技术难题" tabindex="-1"><a class="header-anchor" href="#技术难题"><span>技术难题</span></a></h4><p>技术难题指当在项目过程中遇到了预料之外的技术挑战和难题，可能会导致项目停滞，以至研发团队无法按时完成项目，需要额外的研发投入或影响产品需求计划等。</p><p>我们一般在项目开始前对技术难题进行充分调研和风险评估，如果是在项目中遇到了，快速协调资源解决，甚至是请外部的专家来解决，从内部来看，提升现有团队人才梯队，提升团队成员能力，让成为技术难题的项越来越少是更优的解决方案。</p><h4 id="过度设计" tabindex="-1"><a class="header-anchor" href="#过度设计"><span>过度设计</span></a></h4><p>过度设计是指在开发过程中投入的工作远超过解决问题所需的程度。</p><blockquote><p>例如过于复杂的系统设计、不必要的功能，或过早优化的代码上。涉及到开发、维护和产品质量三方面，这种过度设计会导致更多的开发和测试时间，更复杂的维护工作，以及可能降低的产品质量。</p></blockquote><p>在设计时尽量遵循 KISS（Keep It Simple, Stupid） 原则,合理的保持简单和直接 ，避免不必要的复杂性。</p><h4 id="技术债务" tabindex="-1"><a class="header-anchor" href="#技术债务"><span>技术债务</span></a></h4><p>技术债务是指由于短期内的快速开发和决策，而在长期内需要支付的额外工作。</p><blockquote><p>例如，为了赶项目进度，团队可能会选择快速但不完美的解决方案，而不是花费更多时间来寻找更好的解决方案。</p></blockquote><p>为了解决技术债务，可能需要进行代码重构或重新设计系统，这将带来额外的开发和测试时间。此外，技术债务可能会降低开发团队的生产力。</p><blockquote><p>例如，如果代码质量低，团队可能需要花费更多的时间来理解代码、修复错误和添加新功能。</p></blockquote><p>我们一般是要将历史债务管理起来，识别和记录技术债务，并制定计划逐步解决，同时在新项目中避免产生新的技术债务。</p><h4 id="线上故障" tabindex="-1"><a class="header-anchor" href="#线上故障"><span>线上故障</span></a></h4><p>线上事故对于任何技术团队来说都是一种非常严重的非正常成本。</p><blockquote><p>例如事故可能会对用户产生直接的影响，包括用户体验降低、数据丢失、服务中断等。这不仅可能导致用户对产品或服务的信心降低，甚至可能导致用户流失。此外，严重的时候，线上事故还会导致公司的资产损失。</p></blockquote><p>我们需要建立全面的监控系统，及时发现并响应线上故障，同时制定灾备计划和故障恢复策略，以减少故障影响，并对每次故障进行事后分析，总结教训并采取预防措施避免未来的重复。</p><p>在我们的研发过程中，持续的减少以上的非正常成本是提升整体研发价值的守的逻辑。</p><p>除此之外，我们还需要考虑整体系统的复杂度，用持续优化对抗世界的不确定性。</p><h2 id="三、小结" tabindex="-1"><a class="header-anchor" href="#三、小结"><span><strong>三、小结</strong></span></a></h2><p>总体来看，让<strong>业务需求价值更大、研发更效率、更有效的管理和成本管控</strong>是构成研发价值提升的关键。</p><blockquote><p>在<strong>业务需求价值更大</strong>方面，我们做好价值的评估及规则制定。</p><p>在<strong>研发更效率上</strong>团队团队需要<strong>有明确的计划，有效的项目管理和质量控制流程</strong>，并与业务部门和市场部门紧密合作，同时控制和防范线上事故也至关重要，技术团队需要在系统设计和开发过程中考虑安全性和稳定性，建立有效的监控和预警系统，并制定实施恢复和应急计划。</p><p>在<strong>成本管控上</strong>，技术团队需要有效地管理和控制「隐形」的认知成本、沟通成本和非正常成本，认知成本，包括获取和处理信息以及决策的代价，可以通过选拔合适的人才和制定共享标准来优化。沟通成本，主要涉及达成共识和协调团队工作所需的资源，可以通过优化沟通方式和明确角色责任等来降低。非正常成本，源自如项目延期、技术难题和线上故事等因素，其控制需要避免过度设计和及时偿还技术债务。</p></blockquote><p>因此，掌握这些研发成本的管理和控制，以及有效的项目管理和防范措施，构成了提升研发价值及效率的黄金法则。</p>',62),r=[s];function p(l,h){return e(),n("div",null,r)}const i=o(t,[["render",p],["__file","devValueThink.html.vue"]]),g=JSON.parse('{"path":"/docs/manage/theory/devValueThink.html","title":"研发价值思考","lang":"zh-CN","frontmatter":{"title":"研发价值思考","date":"2024-06-19T00:00:00.000Z","pageComponent":{"name":"EditThisPage","data":{}}},"headers":[{"level":2,"title":"一、问题","slug":"一、问题","link":"#一、问题","children":[]},{"level":2,"title":"二、思考","slug":"二、思考","link":"#二、思考","children":[{"level":3,"title":"2.1 提高业务价值","slug":"_2-1-提高业务价值","link":"#_2-1-提高业务价值","children":[]},{"level":3,"title":"2.2 提高技术价值","slug":"_2-2-提高技术价值","link":"#_2-2-提高技术价值","children":[]},{"level":3,"title":"2.3 提高有效时间内的价值","slug":"_2-3-提高有效时间内的价值","link":"#_2-3-提高有效时间内的价值","children":[]},{"level":3,"title":"2.4 减少非正常成本","slug":"_2-4-减少非正常成本","link":"#_2-4-减少非正常成本","children":[]}]},{"level":2,"title":"三、小结","slug":"三、小结","link":"#三、小结","children":[]}],"git":{"createdTime":1722742422000,"updatedTime":1723710519000,"contributors":[{"name":"lichangyou","email":"lichangyou@ztocc.com","commits":2}]},"filePathRelative":"docs/manage/theory/devValueThink.md"}');export{i as comp,g as data};
