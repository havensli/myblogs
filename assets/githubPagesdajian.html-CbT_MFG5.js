import{_ as e,o as l,c as t,a as i}from"./app-CNvywuHy.js";const a="/myblogs/assets/pz-CcOsGQh3.png",s={},o=i('<h1 id="页面内容" tabindex="-1"><a class="header-anchor" href="#页面内容"><span>页面内容</span></a></h1><h2 id="一、创建仓库" tabindex="-1"><a class="header-anchor" href="#一、创建仓库"><span><strong>一、创建仓库</strong></span></a></h2><blockquote><ol><li>登录GitHub账号，并进入仪表板。</li><li>点击右上角的”+”号按钮，选择”New Repository”。</li><li>输入仓库的名称以及描述，并选择是否为该仓库初始化一个README文件。</li><li>点击”Create repository”按钮创建仓库。</li></ol></blockquote><p>每个公司每个技术团队的管理者都有自己的逻辑来回答这个问题，因为这是带团队的核心逻辑之一，且各有说法。 这里不是想准确的回答这个问题，也不是标准答案，只是对这些问题一些个人思考。</p><h2 id="二、仓库配置" tabindex="-1"><a class="header-anchor" href="#二、仓库配置"><span><strong>二、仓库配置</strong></span></a></h2><blockquote><ol><li>在仓库页面中，点击右上角的”Settings”按钮。</li><li>在设置页面中，向下滚动到”GitHub Pages”部分。</li><li>在”Source”下拉菜单中选择要作为静态网站内容的源代码。可以选择”none”、”master”、”main”、”gh-pages”或其他分支。 – “none”：不使用GitHub Pages。 – “master”或”main”：使用默认的主分支。 – “gh-pages”：使用一个名为”gh-pages”的特定分支。</li><li>选择完源代码后，配置会自动保存，页面会显示你的静态网站的URL，例如”Your site is live at https://havensli.github.io/myblogs/“。</li></ol></blockquote><p><img src="'+a+'" alt="alt text"></p><h2 id="三、创建网站工程" tabindex="-1"><a class="header-anchor" href="#三、创建网站工程"><span><strong>三、创建网站工程</strong></span></a></h2><blockquote><ol><li>在你选择的源代码分支下，创建一个名为”index.html”的HTML文件。如果直接使用根目录下的”index.html”或者其他默认文件名，GitHub Pages将自动将其识别为网站的起始页。</li><li>可以创建其他HTML、CSS、JavaScript或其他静态资源文件，并将它们添加到仓库中。</li></ol></blockquote><h2 id="四、部署发布" tabindex="-1"><a class="header-anchor" href="#四、部署发布"><span><strong>四、部署发布</strong></span></a></h2><blockquote><ol><li>完成上述配置和文件创建后，你的静态网站将已经准备好发布了。</li><li>在GitHub仓库页面的”GitHub Pages”部分，你将看到刚刚配置的静态网站的URL链接。</li><li>点击URL链接即可访问你的静态网站。</li></ol></blockquote><h2 id="五、更新网站" tabindex="-1"><a class="header-anchor" href="#五、更新网站"><span><strong>五、更新网站</strong></span></a></h2><blockquote><ol><li>如果你需要更新静态网站内容，只需修改相应的代码文件并将其推送到GitHub仓库的正确分支。</li><li>更新后，你的静态网站将自动更新，并通过相同的URL链接访问更新后的内容。</li><li>deploy.sh 配置</li></ol></blockquote><h2 id="六、小结" tabindex="-1"><a class="header-anchor" href="#六、小结"><span><strong>六、小结</strong></span></a></h2><blockquote><p>配置GitHub Pages非常简单。创建一个仓库、配置源代码分支、创建静态网站文件，然后将其推送到仓库中即可实现发布。随后，你可以通过URL链接访问你的静态网站，并通过推送更新网站内容。</p></blockquote>',15),n=[o];function r(h,c){return l(),t("div",null,n)}const d=e(s,[["render",r],["__file","githubPagesdajian.html.vue"]]),u=JSON.parse('{"path":"/blogs/jottings/githubPagesdajian.html","title":"GitHub Pages个人网站搭建","lang":"zh-CN","frontmatter":{"title":"GitHub Pages个人网站搭建","date":"2024-06-19T00:00:00.000Z"},"headers":[{"level":2,"title":"一、创建仓库","slug":"一、创建仓库","link":"#一、创建仓库","children":[]},{"level":2,"title":"二、仓库配置","slug":"二、仓库配置","link":"#二、仓库配置","children":[]},{"level":2,"title":"三、创建网站工程","slug":"三、创建网站工程","link":"#三、创建网站工程","children":[]},{"level":2,"title":"四、部署发布","slug":"四、部署发布","link":"#四、部署发布","children":[]},{"level":2,"title":"五、更新网站","slug":"五、更新网站","link":"#五、更新网站","children":[]},{"level":2,"title":"六、小结","slug":"六、小结","link":"#六、小结","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"blogs/jottings/githubPages搭建.md"}');export{d as comp,u as data};
